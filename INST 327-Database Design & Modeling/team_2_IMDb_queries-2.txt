/* Questions */ USE IMDb;

-- 1. Who was the main actors in the most gross movie of 2019?? 
SELECT actors AS 'Actor Name', CONCAT('$', FORMAT(grossIncome, 2)) AS "Gross Income"
FROM general information g 
	JOIN box office b
		ON g.boxOfficeID  b.boxOfficeID 
	JOIN actors link al
		ON g.movieID = al.movieID 
	JOIN actors list a
		ON al.actorID = a.actorID 
WHERE grosslncome =
(
	SELECT MAX(grossINCOME)
	FROM box office
);

-- 2. What are the top movies in the US for 2019 based on metascore? 
SELECT movieTitle AS "Movie Title", metascore AS "Metascore"
FROM general information g JOIN feedback f
	ON g.feedbackID = f.feedbackID
WHERE metascore =
(
SELECT MAX(metascore) FROM feedback
);

-- 3. What is the most watched genre
SELECT COUNT(genre) AS 'Number of Appearances', genre AS "Genre" 
FROM general information
GROUP BY genre 
LIMIT 1;

-- 4. Which movie got the best reviews from users?
SELECT movieTitle AS "Movie Title", userReviews AS 'Reviews From User' 
FROM general information g JOIN feedback f
	ON g.feedbackID = f.feedbackID 
WHERE userReviews =
(
	SELECT MAX(userReviews) 
	FROM feedback
);

—— 5. Which movie got the best reviews from critics?
SELECT movieTitle AS "Movie Title", criticReviews AS 'Reviews From Critics'
FROM general information g JOIN feedback f
	ON g.feedbackID = f.feedbackID 
WHERE criticReviews =
(
	SELECT MAX(criticReviews) 
	FROM feedback
);

-- 6. Which movie got the highest average vote?
SELECT movieTitle AS "Movie Title", avg votes AS "Average Votes" 
FROM general information g JOIN feedback f
	ON g.feedbackID = f.feedbackID
WHERE avg votes =
(
	SELECT MAX(avg votes) 
	FROM feedback
);

-- 7. Which movie got the lowest average vote?
SELECT movieTitle AS "Movie Title", avg votes AS "Average Titles" 
FROM general_information g JOIN feedback f
	ON g.feedbackID = f.feedbackID
WHERE avg votes =
(
	SELECT MIN(avg votes) 
	FROM feedback
);

—— 8. Which movie has the longest duration?
SELECT movieTitle AS "Movie Title", duration AS "Duration" 
FROM general information
WHERE duration =
(
	SELECT MAX(duration) 
	FROM general information
);

-- 9. Which movie has the shortest duration?
SELECT movieTitle AS "Movie Title", duration AS "Duration" 
FROM general information
WHERE duration =
(
	SELECT MIN(duration) 
	FROM general information
);

-- 10. When was the USA grossest movie of July 2019 released into theaters?
SELECT movieTitle AS 'Movie Name', CONCAT('$', FORMAT(grossIncome, 2)) AS "Gross Income"
FROM general information g JOIN box office b
	ON g.boxOfficeID = b.boxOfficeID 
WHERE grosslncome =
(
	SELECT MAX(grossINCOME)
	FROM box office
);

-- 11. How many movies had a average vote of 5 or higher?
SELECT movieTitle AS 'Movie Name', avg_votes AS 'Average Votes'
FROM general information g JOIN feedback f 
	ON g.feedbackID = f.feedbackID
WHERE avg votes > 5 
ORDER BY avg votes DESC;

-- Views

-- 12. What were all the movies released in the summer? 
CREATE OR REPLACE VIEW movies summer AS
	SELECT g.movieID AS "Movie ID", movieTitle AS "Movie Title", datePublished AS "Date Published", 
genre AS "Genre", actors AS "Actors", CONCAT('$', FORMAT(grossIncome, 2)) AS "Gross Income", budget 
AS "Budget", directors AS "Directors", metascore AS "Metascore", avg votes AS "Average Votes", votes AS 
"Votes", userReviews AS "User Reviews", criticReviews AS "Critic Reviews", duration AS "Duration",
productionName AS "Production Name", writers AS "Writers" 
FROM general information g
	JOIN actors link al
		ON g.movieID = al.movieID 
	JOIN actors list a
		ON al.actorID = a.actorID 
	JOIN box office b
		ON g.boxOfficeID = b.boxOfficeID 
	JOIN directors list d
		ON g.directorID = d.directorID 
	JOIN feedback f
		ON g.feedbackID = f.feedbackID 
	JOIN production company p
		ON g.productionID = p.productionID 
	JOIN writers list w
		ON g.writerID = w.writerID
WHERE g.datePublished > "2019—06—01" AND g.datePublished < "2019—09—
22"
ORDER BY g.movieID;

-- 13. What movies had the worst reviews below 5 and 50%? 
CREATE OR REPLACE VIEW bad reviews AS
	SELECT movieTitle AS 'Movie Name', avg_votes AS 'Average Votes', metascore AS "Metascore"
	FROM general information g
		JOIN feedback USING(feedbackID) 
	WHERE avg votes < 5 AND metascore < 50
	ORDER BY avg votes DESC;

-- 14. What were the most liked movies over 2 hours? 
CREATE OR REPLACE VIEW most liked long movies AS
	SELECT movieTitle AS 'Movie Name', duration AS "Duration", avg votes AS 'Average Votes'
	FROM general information
		JOIN feedback USING(feedbackID) 
	WHERE duration > 120 AND avg votes > 8
	ORDER BY avg votes DESC;


-- 15. What was the most profitable movie for every production company? 
CREATE OR REPLACE VIEW top production company AS
	SELECT g.movieTitle AS "Movie Title", p.productionName AS "Production Company", CONCAT('$', FORMAT(b.grossIncome, 2)) AS "Gross Income"
	FROM production company p
		JOIN general information g USING (productionID) 
		JOIN box office b USING (boxOfficeID)
	GROUP BY productionName, g.movieTitle, b.grossIncome 
	ORDER BY grossIncome DESC;

-- 16. What was the best rated movie every month in 2019? 
CREATE OR REPLACE VIEW best movie every month AS
	SELECT movieTitle AS "Movie Title", DATE FORMAT(datePublished, '%M') AS "Date Released", MAX(metascore) AS "Metascore", MAX(userReviews) AS "User Reviews", MAX(criticReviews) AS "Critic Reviews"
	FROM general information
		JOIN feedback USING (feedbackID) 
	WHERE datePublished IN
	(
		SELECT datePublished 
		FROM general information
		WHERE datePublished > "2019-01-01" AND datePublished < "2019-12-31"
	)
	GROUP BY month(datePublished) 
	ORDER BY month(datePublished):
